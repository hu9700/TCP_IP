													|user data	|
																	through Application
__________________________________________________________________________________________Application	Layer
										|App header	|user data	|
																	through TCP
__________________________________________________________________________________________Transmittion Layer
							|TCP header	|Application data		|
										TCP packet					through IP
__________________________________________________________________________________________Network Layer
				|IP header	|TCP header	|Application data		|
										IP fragment					through ethernet driver
__________________________________________________________________________________________Hardware Layter
|ethernet header|IP header	|TCP header	|Application data		|ethernet tail	|
|14 byte		|20 byte	|20 byte	|						|4 byte		|
										ethernet frame
										
TCP layer can be TCP, UDP, ICMP, IGMP
it can be different protocol

so in IP header, will be 8 digital call protocol field, 
1 indicated ICMP, 2 IGMP, 6 TCP, 17 UDP


Different packing IEEE802 and ethernet
================IEEE 802 packing====================
|802.3 MAC								|802.2 LLC				|802.2 SNAP			|
|dest address	|source address	|length	|DSAP	|SSAP	|cntl	|org code	|type	|Data			|CRC	|
										 AA		 AA		 03		 00
|6 byte			| 6 byte		|2 byte	|1 byte	|1byte	|1 byte	|3 byte		|2 byte	|38~1492 byte	|4 byte	|

																			|0x0800	|IP fragment	|
																			|2 byte	|38~1492 byte	|
																			
																			|0x0806	|ARP req/ans	|PAD	|
																			|2 byte	|28 byte		|10 byte|
																			
																			|0x8035	|RARP req/ans	|PAD	|
																			|2 byte	|28 byte		|10 byte|

================ethernet packing====================
|			ethernet header				|
|dest address	|source address	|type	|Data			|CRC	|
|6 byte			|6 byte			|2byte	|46~1500 byte	|4 byte	|

								|0x0800	|IP fragment	|
								|2 byte	|46~1500 byte	|
								
								|0x0806	|ARP req/ans	|PAD	|
								|2 byte	|28 byte		|18 byte|
								
								|0x8035	|RARP req/ans	|PAD	|
								|2 byte	|28 byte		|18 byte|
								
								
#############IP header###########################
20 byte
0															  15 16									   						  31
_________________________________________________________________________________________________________________________________	  _____
|4 bit 			|4 bit 			|8 bit type of service			|																|		|
|version		|header length	|				(TOS)			|				16 bit total length(number of byte)				|		|
|_______________|_______________|_______________________________|_______________________________________________________________|		|
|																|	3 bit 	|													|		|
|				16 bit name tag									|	signal	|				13 bit offset						|		|
|_______________________________________________________________|___________|___________________________________________________|		|
|		8 bit life time			|								|																|		|
|				(TTL)			|	8 bits protocol				|						16 bit header CRC						|		|
|_______________________________|_______________________________|_______________________________________________________________|		|
|																																|		|
|											32 bit source IP address															|		|
|_______________________________________________________________________________________________________________________________|		|
|																																|	20 BYTES
|											32 bit destination IP address														|		|
|_______________________________________________________________________________________________________________________________|		|
|																																|		|
|											32 bit destination IP address														|		|
|_______________________________________________________________________________________________________________________________|	  __|__
|																																|
|											Option(if exist)																	|
|_______________________________________________________________________________________________________________________________|
|																																|
|													DATA																		|
|_______________________________________________________________________________________________________________________________|

4个字节的32 bit值以下面的次序传输:首先是 0~7 bit,其次8~15 bit,然后16~23 bit,
最后是24~31 bit。这种传输次序称作 big endian字节序。由于 TCP/IP首部中所有的二进制整数
在网络中传输时都要求以这种次序,因此它又称作网络字节序。以其他形式存储二进制整数
的机器,如 little endian格式,则必须在传输数据之前把首部转换成网络字节序。

目前的协议版本号是 4,因此IP有时也称作 IPv4

服务类型( TO S)字段包括一个 3 bit的优先权子字段(现在已被忽略) 4 bit的TOS子字
段和1 bit未用位但必须置 0。4 bit的TO S分别代表:最小时延、最大吞吐量、最高可靠性和最
小费用。4 bit中只能置其中1 bit。如果所有 4 bit均为0,那么就意味着是一般服务

总长度字段是指整个 I P数据报的长度,以字节为单位

总长度字段是IP首部中必要的内容,因为一些数据链路(如以太网)需要填充一些数据
以达到最小长度。尽管以太网的最小帧长为 4 6字节.
如果没有总长度字段,那么 IP层就不知道 46字节中有多少是 IP数据报的内容

TTL(time-to-live)生存时间字段设置了数据报可以经过的最多路由器数。
一旦经过一个处理它的路由器,它的值就减去 1。当该字段的值为 0时,数据报就被丢弃,并发送 I C M P报文通知源主机

首部检验和字段是根据 IP首部计算的检验和码。它不对首部后面的数据进行计算。 ICMP、
IGMP、UDP和TCP在它们各自的首部中均含有同时覆盖首部和数据检验和码。

为了计算一份数据报的 I P检验和,首先把检验和字段置为 0。然后,对首部中每个 16 bit
进行二进制反码求和(整个首部看成是由一串 16 bit的字组成)
,结果存在检验和字段中。当
收到一份 I P数据报后,同样对首部中每个 16 bit进行二进制反码的求和。

由于接收方在计算过程中包含了发送方存在首部中的检验和,因此,如果首部在传输过程中没有发生任何差错,
那么接收方计算的结果应该为全 1。如果结果不是全 1(即检验和错误)
,那么I P就丢弃收到的
数据报。但是不生成差错报文,由上层去发现丢失的数据报并进行重传。

最后一个字段是任选项,是数据报中的一个可变长的可选信息。目前,这些任选项定义
如下:
• 安全和处理限制(用于军事领域,详细内容参见 RFC 1108[Kent 1991])
• 记录路径(让每个路由器都记下它的 IP地址,见7.3节)
• 时间戳(让每个路由器都记下它的 IP地址和时间,见 7.4节)
• 宽松的源站选路(为数据报指定一系列必须经过的 IP地址,见8.5节)
• 严格的源站选路(与宽松的源站选路类似,但是要求只能经过指定的这些地址,不能
经过其他的地址)
。
这些选项很少被使用,并非所有的主机和路由器都支持这些选项。
选项字段一直都是以 32 bit 作为界限,在必要的时候插入值为 0的填充字节。这样就保证
IP首部始终是 32 bit 的整数倍(这是首部长度字段所要求的)
。

ARP 是在以太网层上的
|以太网目的地址	|以太网源地址	|帧类型	|硬件类型	|协议类型	|硬件地址长度	|协议地址长度	|op	|发送端以太网地址	|发送端IP地址	|目的以太网地址	|目的IP地址	|
		6			6			2		2		2		1			1		  2			6			4			6					4
|		以太网首部			|									28字节ARP请求																|

ff:ff:ff:ff:ff:ff是以太网广播地址
